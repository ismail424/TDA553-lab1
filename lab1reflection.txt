1. Explain how you chose the inheritance hierarchy in Task 1, making reference to the Open-Closed Principle.
The Open-Closed Principle states that a class should be open for extension but closed for modification, and the inheritance hierarchy in Task 1 was chosen with that in mind. Car-specific classes are extendable through a superclass "Car", and its subclasses can implement additional functionality without needing to modify the superclass itself. 

2. Explain how you implemented each of the sanity checks in Task 4?
For the first sanity check, we implemented a method checkAcceleration() which would throw an exception if the values were outside the acceptable range. We added a call to this method in the code for gas() and brake().
For the second, we implemented another new method checkNewSpeed() which calculates the new speed and returns the old speed if the new speed is outside the valid range.
Finally, we satisfied the last two items on the list by extending our checkNewSpeed() method to accept a boolean value "isAccelerating", and making sure that the new speed was either higher or lower (or equal to) the current speed, depending on whether "isAccelerating" was true or false.

We also wrote a few generic test cases to check that the code was working correctly. For example: If the user brakes the car, the speed should decrease by the brake argument. If the brake argument is equal to 1, the speed should be 0.
Afterwards, we tested the code to check whether the test cases passed. Since some of the test cases failed, we fixed the code so the test cases passed.